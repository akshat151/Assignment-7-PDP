#load SMPTE.ppm and call it 'SMPTE'
load res/SMPTE/SMPTE-original.ppm SMPTE

#load SMPTE.png and call it 'SMPTE'
load res/SMPTE/SMPTE-original.png SMPTE-png

#load SMPTE.jpeg and call it 'SMPTE'
load res/SMPTE/SMPTE-original.jpeg SMPTE-jpeg

#brighten SMPTE by adding 10
brighten 10 SMPTE SMPTE-brighter

#flip SMPTE vertically
vertical-flip SMPTE SMPTE-vertical

#blur
blur SMPTE SMPTE-blur

#sharpen
sharpen SMPTE SMPTE-sharpen

#sepia
sepia SMPTE SMPTE-sepia

#dither
dither SMPTE SMPTE-dither

#flip the vertically flipped SMPTE horizontally
horizontal-flip SMPTE-vertical SMPTE-vertical-horizontal

#create a greyscale using only the value component, as an image SMPTE-greyscale
greyscale red-component SMPTE SMPTE-greyscale

#create a greyscale using color transform
greyscale SMPTE SMPTE-greyscale-ct

#save SMPTE-brighter
save res/SMPTE-brighter.ppm SMPTE-brighter

#save SMPTE-greyscale
save res/SMPTE-gs.ppm SMPTE-greyscale

#give the SMPTE a red tint
rgb-split SMPTE SMPTE-red SMPTE-green SMPTE-blue

#brighten just the red image
brighten 50 SMPTE-red SMPTE-red

#combine them back, but by using the brightened red we get a red tint
rgb-combine SMPTE-red-tint SMPTE-red SMPTE-green SMPTE-blue

save res/SMPTE-red-tint.ppm SMPTE-red-tint

save res/SMPTE-saved1.png SMPTE

save res/SMPTE-saved2.jpeg SMPTE